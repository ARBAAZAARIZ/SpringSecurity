package com.arbaaz.SpringSecurity9.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

@Component
public class ProjectAuthenticationProvider implements AuthenticationProvider {

    @Autowired
    SpringSecurityUserDetailService userDetailService;

    @Autowired
    PasswordEncoder passwordEncoder;

    @Override
    public Authentication authenticate(Authentication authentication) throws AuthenticationException {
        String username=authentication.getName();
        String password=authentication.getCredentials().toString();
        System.out.println(username);
        System.out.println(password);

        UserDetails userDetails=userDetailService.loadUserByUsername(authentication.getName());

         if(passwordEncoder.matches(password,userDetails.getPassword())){

             return new UsernamePasswordAuthenticationToken(username,password,userDetails.getAuthorities());
         }else{
             throw new BadCredentialsException("Bad credentials");
         }


    }

    @Override
    public boolean supports(Class<?> authentication) {

        return (UsernamePasswordAuthenticationToken.class.isAssignableFrom(authentication));

    }


}
